use num_enum::TryFromPrimitive;
use std::convert::TryFrom;

#[derive(Debug, TryFromPrimitive)]
#[repr(u8)]
pub enum EquipmentID {
    Leather_Shield = 0,
    Iron_Shield = 1,
    Steel_Shield = 2,
    Silver_Shield = 3,
    Talisman_Shield = 4,
    Hexlock_Shield = 5,
    Aegis_Shield = 6,
    Ochain_Shield = 7,
    Seiros_Shield = 8,
    Aurora_Shield = 9,
    Kadmos_Shield = 10,
    Lampos_Shield = 11,
    Accuracy_Ring = 12,
    Critical_Ring = 13,
    Evasion_Ring = 14,
    Speed_Ring = 15,
    March_Ring = 16,
    Goddess_Ring = 17,
    Prayer_Ring = 18,
    Magic_Staff = 19,
    Healing_Staff = 20,
    Caduceus_Staff = 21,
    Thyrsus = 22,
    Rafail_Gem = 23,
    Experience_Gem = 24,
    Knowledge_Gem = 25,
    Circe_Staff = 26,
    Tomas_Staff = 27,
    Armored_Knight_Shield = 28,
    Great_Knight_Shield = 29,
    Fortress_Knight_Shield = 30,
    Asclepius = 31,
    Dark_Aegis_Shield = 32,
    Dark_Thyrsus = 33,
    Dark_Rafail_Gem = 34,
    Flame_Shield = 35,
    Emperor_Shield = 36,
    Black_Eagle_Pendant = 37,
    Blue_Lion_Brooch = 38,
    Golden_Deer_Bracelet = 39,
    White_Dragon_Scarf = 40,
    Equipment_41 = 41,
    Equipment_42 = 42,
    Equipment_43 = 43,
    Equipment_44 = 44,
    Equipment_45 = 45,
    Equipment_46 = 46,
    Equipment_47 = 47,
    Equipment_48 = 48,
    Equipment_49 = 49,
    Equipment_50 = 50,
}

binread_enum!(EquipmentID, u8);
